#!/usr/bin/env python

print "Importing"
import rospy
import moveit_commander
import sys
import geometry_msgs.msg
import moveit_msgs.msg
from geometry_msgs.msg import PoseStamped
import tf2_ros
import tf2_geometry_msgs
from ros_cgio_py import FanucCGIO
print "Import complete"

def goto(goal):
    one_arm.set_pose_target(goal)
    plan1 = one_arm.plan()
    one_arm.go(wait=True)

def recieve_goal(goal_pose):
    print "recieved pose:"
    print goal_pose.pose.position
    goto(goal_pose.pose)
    goal_pose.pose.position.z = .18
    goto(goal_pose)
    pickup()
    goal_pose.pose.position.z = .7
    goal_pose.pose.position.y = 0
    goal_pose.pose.position.x = .8
    goto(goal_pose)
    drop()
    rospy.sleep(5)
    
def pickup():
    gripper.write_robot_dout(3,1)
    print "pickup"
    
def drop():
    gripper.write_robot_dout(3,0)
    gripper.write_robot_dout(1,1)
    print "drop"
    rospy.sleep(.05)
    gripper.write_robot_dout(1,0)
    
    
    

if __name__ == '__main__':
    gripper = FanucCGIO('192.168.1.69')
    rdio = gripper.read_robot_dout(1)
    print("RDOUT[1] is currently {0}".format("On" if rdio == 1 else "Off"))
    
    moveit_commander.roscpp_initialize(sys.argv)
    
    rob = moveit_commander.RobotCommander()
    one_arm = moveit_commander.MoveGroupCommander("manipulator")
    print "Connected to One Arm"
    
    # ROS node initialization
    rospy.init_node('goalsender', anonymous=True)
    
    # Create Subscribers
    goal_sub = rospy.Subscriber("/goalsend", PoseStamped, recieve_goal, queue_size=1)
	
    while not rospy.is_shutdown():
        print "Node running"
        rospy.spin()
